# Copied from https://github.com/open-contracting/cardinal-rs/blob/main/.github/workflows/release.yml

name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

env:
  ARTIFACT_NAME: java-updater

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - env:
          GH_TOKEN: ${{ github.token }}
        run: gh release create ${{ github.ref_name }}
  assets:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Include all "Tier 1 with Host Tools" targets and "Tier 2 with Host Tools" targets for Windows and macOS,
        # excluding *-pc-windows-msvc, which requires cross-toolchains. Goal is one option per OS per architecture.
        # https://doc.rust-lang.org/rustc/platform-support.html
        # https://github.com/cross-rs/cross#supported-targets
        # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
        include:
          - archive: ".tar.gz"
            build: linux-arm
            command: cross
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - archive: ".tar.gz"
            build: linux-32-bit
            command: cross
            os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - archive: ".tar.gz"
            build: linux-64-bit
            command: cross
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - archive: ".zip"
            build: windows-32-bit
            command: cargo
            ext: ".exe"
            os: windows-latest
            target: i686-pc-windows-msvc
          - archive: ".zip"
            build: windows-64-bit
            command: cargo
            ext: ".exe"
            os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - run: cargo install cross --git https://github.com/cross-rs/cross
      - env:
          RUSTFLAGS: -Zon-broken-pipe=kill
        run: ${{ matrix.command }} build --release --target ${{ matrix.target }}
      # 7z is available on all runners.
      # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#preinstalled-software
      - name: Create zip archive
        id: archive
        if: matrix.archive == '.zip'
        shell: bash
        run: |
          DIRECTORY="${{ env.ARTIFACT_NAME }}-${{ github.ref_name }}-${{ matrix.build }}"
          mkdir "${DIRECTORY}"
          cp license* "target/${{ matrix.target }}/release/${{ env.ARTIFACT_NAME }}${{ matrix.ext }}" "${DIRECTORY}"
          7z a "${DIRECTORY}${{ matrix.archive }}" "${DIRECTORY}"
          echo "path=${DIRECTORY}${{ matrix.archive }}" >> "${GITHUB_OUTPUT}"
      - env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.ref_name }} ${{ steps.archive.outputs.path }}

permissions:
  contents: write
