[package]
authors = ["Marco Lehmann-Mörz"]
categories = ["command-line-utilities", "update"]
description = "A command-line program to keep a bunch of java installations up to date"
edition = "2024"
keywords = ["update"]
license = "MIT OR Apache-2.0"
name = "java-updater"
publish = false
readme = "readme.md"
repository = "https://github.com/mlehmannm/java-updater-rs.git"
# keep in sync with .github/workflows/release.yml
rust-version = "1.90.0"
version = "0.4.0"

[[bin]]
name = "java-updater"
path = "src/main.rs"

[features]
default = ["azul", "eclipse", "notify"]
azul = []
eclipse = []
notify = []

[dependencies]
anyhow = "1.0"
base16ct = { version = "0.3", features = ["alloc"] }
clap = { version = "4.5", default-features = false, features = [
    "cargo",
    "derive",
    "env",
    "error-context",
    "help",
    "std",
    "usage",
    "wrap_help",
] }
humantime = "2.3"
nu-ansi-term = "0.50"
reqwest = { version = "0.12", features = ["blocking"] }
semver = { version = "1.0", features = ["serde"] }
# avoid pre-compiled binaries, see https://github.com/serde-rs/serde/issues/2538 and https://github.com/serde-rs/serde/pull/2590
serde = { version = ">=1.0.185", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
sha2 = "0.10"
shellexpand = "3.1"
thiserror = "2.0"
threadpool = "1.8"
time = { version = "0.3", features = ["formatting", "local-offset", "macros"] }
tracing = { version = "0.1", features = ["log", "release_max_level_trace"] }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

[target.'cfg(not(windows))'.dependencies]
flate2 = "1.1"
tar = "0.4"

[target.'cfg(windows)'.dependencies]
zip = "6.0"

[build-dependencies]
vergen-git2 = { version = "1.0", features = ["build", "emit_and_set", "rustc"] }

[target.'cfg(windows)'.build-dependencies]
windows-registry = "0.6"
winresource = "0.1"

[dev-dependencies]
tempfile = "3.23"
test-log = "0.2"

[package.metadata.winres]
FileDescription = "Java Updater"
LegalCopyright = "Copyright © 2024-2025 Marco Lehmann-Mörz"
OriginalFilename = "java-updater.exe"

# this might decrease compile times for incremental builds
# https://benw.is/posts/how-i-improved-my-rust-compile-times-by-seventy-five-percent
[profile.dev]
opt-level = 1

# this might decrease compile times for incremental builds
# https://benw.is/posts/how-i-improved-my-rust-compile-times-by-seventy-five-percent
[profile.dev.package."*"]
opt-level = 3

[profile.release]
# borrowed partially from https://github.com/microsoft/edit/blob/main/Cargo.toml
codegen-units = 1           # reduces binary size by ~2%
debug = "full"              # no one needs an undebuggable release binary
incremental = true          # improves re-compile times
lto = true                  # reduces binary size by ~14%
opt-level = "s"             # reduces binary size by ~25%
panic = "abort"             # reduces binary size by ~50% in combination with -Zbuild-std-features=panic_immediate_abort
split-debuginfo = "packed"  # generates a separate *.dwp/*.dSYM so the binary can get stripped
strip = "symbols"           # see split-debuginfo - allows us to drop the size by ~65%

[lints.clippy] # uncomment from time to time and run `just clippy`
# cargo = { priority = -1, level = "deny" }
# complexity = { priority = -1, level = "deny" }
# correctness = { priority = -1, level = "deny" }
# nursery = { priority = -1, level = "deny" }
# pedantic = { priority = -1, level = "deny" }
# perf = { priority = -1, level = "deny" }
# restriction = { priority = -1, level = "deny" }
# style = { priority = -1, level = "deny" }
# suspicious = { priority = -1, level = "deny" }
